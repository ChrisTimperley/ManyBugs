FROM squareslab/manybugs:gzip

ARG perl
RUN perlbrew install "perl-${perl}" && \
    perlbrew use "perl-${perl}"
ENV PERLBREW_PERL "perl-${perl}"
ENV PATH "${PERLBREW_ROOT}/perls/perl-${perl}/bin:${PATH}"

ARG scenario
ENV SCENARIO_NAME ${scenario}
ENV OLD_LOCATION "/root/mountpoint-genprog/genprog-many-bugs/${scenario}"

# - downloads scenario archive
# - throws away useless files
# - modifies naming of files to match RepairBox standards
# - fixes test harness to work on Docker container
RUN wget  -nv http://repairbenchmarks.cs.umass.edu/ManyBugs/scenarios/${SCENARIO_NAME}.tar.gz \
          -O scenario.tar.gz && \
    tar -xf scenario.tar.gz && \
    rm -f scenario.tar.gz && \
    mv gzip-* scenario && \
    cd scenario && \
    rm -rf fixed-program.txt *.cache coverage.* coverage limit* sanity *debug* compile.pl local-root && \
    rm -rf gzip configuration-oracle *~ && \
    mv fix-failures bug-info && \
    mv bug-failures bug-info && \
    mv fix.lines bug-info && \
    mv fault.lines bug-info && \
    mv bugged-program.txt manifest.txt && \
    cd /experiment && \
    mv scenario/* . && rm -rf scenario && \
    sed -i "s#cd gzip#cd src#g" test.sh && \
    sed -i "s#/usr/bin/perl#perl#" test.sh && \
    sed -i "s#${OLD_LOCATION}#/experiment#g" test.sh && \
    sed -i "s#/experiment/limit#timeout 5#g" test.sh

RUN cd src && \
    git checkout $(grep "bug revision:" ../bug-info/scenario-data.txt | cut -d " " -f3) && \
    ./bootstrap && \
    ./configure && \
    sed -i "s#_GL_WARN_ON_USE (gets,#//#g" lib/stdio.in.h && \
    sudo chown -R docker /experiment

# Fix the GenProg configuration file
RUN sed -i "s#bugged-program.txt#manifest.txt#" configuration-default && \
    sed -i "s#perl compile.pl#./compile.sh#"    configuration-default

# Replace the test suite
RUN rm -rf src/tests && \
    mv tests src/tests

#RUN 
#  ./configure "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32"
